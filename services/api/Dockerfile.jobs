FROM node:22.13.0-alpine

# Yarn will not install any package listed in devDependencies if the NODE_ENV
# environment variable is set to production. Use this flag to instruct Yarn to
# ignore NODE_ENV and take its production-or-not status from this flag instead.
ARG NODE_ENV=production

# Note layers should be ordered from less to more likely to change.

# Enable community & install Python + pipx + yq
RUN echo "https://dl-cdn.alpinelinux.org/alpine/v3.21/community" \
      >> /etc/apk/repositories && \
    apk add --no-cache \
      bash \
      curl \
      gcc \
      jq \
      musl-dev \
      python3 \
      py3-pip \
      pipx

# Use pipx to install your global Python tools
RUN pipx ensurepath && \
    pipx install yacron

# Download Mike Farahâ€™s yq
ARG YQ_VERSION=v4.44.5
ARG YQ_BINARY=yq_linux_amd64
RUN wget -qO /usr/local/bin/yq \
      https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} \
    && chmod +x /usr/local/bin/yq

# Needed for Gcloud Storage resumable file uploads
RUN mkdir -p /root/.config

# Set work directory
WORKDIR /service

# Install dependencies and store yarn cache
COPY package.json yarn.lock ./
RUN --mount=type=cache,target=/root/.yarn YARN_CACHE_FOLDER=/root/.yarn yarn install --frozen-lockfile

# Copy app source
COPY . .

CMD ["./scripts/entrypoints/jobs.sh", "jobs/default.yml"]
