#!/bin/bash
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
cd $SCRIPTPATH; cd ../../
PLATFORM_NAME=$(basename `pwd`)
ENVIRONMENT=$1
# Use fallback to switch to requested
# project if it's safe to do so.
FALLBACK=$2

if [ "$ENVIRONMENT" == "" ]; then
  echo "Usage: $0 <environment>"
  exit 1
fi

export $(grep -v '^#' deployment/$ENVIRONMENT/env.conf | xargs)

CURRENT_GCLOUD_PROJECT=`gcloud config get-value project`
CURRENT_GCLOUD_COMPUTE_ZONE=`gcloud config get-value compute/zone`
CURRENT_GCLOUD_KUBERNETES_CLUSTER_NAME=`gcloud config get-value container/cluster`

check_config () {
  if [ "$GCLOUD_PROJECT" != "$CURRENT_GCLOUD_PROJECT" ]; then
    echo "Invalid Google Cloud config (use authorize script): project = $CURRENT_GCLOUD_PROJECT"
  fi

  if [ "$GCLOUD_COMPUTE_ZONE" != "$CURRENT_GCLOUD_COMPUTE_ZONE" ]; then
    echo "Invalid Google Cloud config (use authorize script): compute/zone = $CURRENT_GCLOUD_COMPUTE_ZONE"
  fi

  if [ "$GCLOUD_KUBERNETES_CLUSTER_NAME" != "$CURRENT_GCLOUD_KUBERNETES_CLUSTER_NAME" ]; then
    echo "Invalid Google Cloud config (use authorize script): container/cluster = $CURRENT_GCLOUD_KUBERNETES_CLUSTER_NAME"
  fi

}

if [ -d deployment/secrets ]; then
  SECRET_FILES=`ls deployment/secrets | wc -l`
  if [ "$SECRET_FILES" -ne 0 ]; then
    echo "---"
    echo "---"
    echo "--- WARNING: Found a files in deployments/secrets/ - make sure to remove these!"
    echo "---"
    echo "---"
  fi
fi

error=$(check_config)
if [ "$error" != "" ]; then
  if [ "$FALLBACK" != "" ]; then
    echo "Switching project to $PLATFORM_NAME-$ENVIRONMENT."
    ./deployment/scripts/authorize $ENVIRONMENT
    exit 0
  else
    echo $error
    exit 1
  fi
else
  echo "Using Google Cloud environment $ENVIRONMENT (project=$GCLOUD_PROJECT, compute/zone=$GCLOUD_COMPUTE_ZONE, cluster=$GCLOUD_KUBERNETES_CLUSTER_NAME)"
fi
