#! /usr/bin/env python

# Patching kubernetes resource arrays involves JSON manipulation
# that is complicated in bash so using Python here.

import os
import sys
import json

APP_TLD = os.environ['APP_TLD']

BASE_SERVICE = sys.argv[1]
TAG          = sys.argv[2]
OPERATION    = sys.argv[3]

INGRESS = 'ingress/%s-feature-ingress' % BASE_SERVICE

def run():
  rules = get_rules()
  host = get_host()
  exists = [rule for rule in rules if rule['host'] == host]
  if OPERATION == 'add' and not exists:
    rules.append({
      "host": host,
      "http": {
        "paths": [
          {
            "backend":
            {
              "serviceName": '%s-%s' % (BASE_SERVICE, TAG),
              "servicePort": 80
              }
            }
          ]
        }
      })
    patch('Adding %s to ingress rules' % host, rules)
  elif OPERATION == 'remove' and exists:
    rules = [rule for rule in rules if rule['host'] != host]
    patch('Removing %s from ingress rules' % host, rules)

def get_rules():
  command = 'kubectl get %s -o json' % INGRESS
  return json.loads(os.popen(command).read()).get('spec').get('rules') or []

def get_host():
  if BASE_SERVICE == 'api':
    return '%s-api.%s' % (TAG, APP_TLD)
  else:
    return '%s.%s' % (TAG, APP_TLD)

def patch(message, rules):
  patch = '{"spec":{"rules":%s}}' % json.dumps(rules)
  command = "kubectl patch %s --record -p '%s'" % (INGRESS, patch)
  print(message)
  os.system(command)

run()
