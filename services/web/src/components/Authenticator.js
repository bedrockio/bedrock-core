import {
  Button,
  Container,
  Divider,
  Group,
  Loader,
  PinInput,
  Stack,
  Text,
} from '@mantine/core';

import { useEffect, useState } from 'react';

import { useSession } from 'stores/session';

import ErrorMessage from 'components/ErrorMessage';
import { ExternalLink } from 'components/Link';
import QRCode from 'components/QRCode';

import { request } from 'utils/api';

export default function Authenticator({ onClose, onSuccess }) {
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [url, setUrl] = useState(null);
  const [secret, setSecret] = useState(null);
  const [code, setCode] = useState('');

  const { updateUser } = useSession();

  useEffect(() => {
    requestTOTP();
  }, []);

  async function requestTOTP() {
    try {
      setError(null);
      setLoading(true);
      const { data } = await request({
        method: 'POST',
        path: '/1/auth/totp/request',
      });
      setUrl(data.url);
      setSecret(data.secret);
      setLoading(false);
    } catch (err) {
      setError(err);
      setLoading(false);
    }
  }

  const handleCodeChange = (value) => {
    setCode(value);
  };

  const onSubmitCode = async () => {
    try {
      setError(null);
      setLoading(true);
      const { data } = await request({
        method: 'POST',
        path: '/1/auth/totp/enable',
        body: {
          code,
          secret,
        },
      });
      updateUser(data);
      onClose();
      onSuccess();
    } catch (err) {
      setError(err);
      setLoading(false);
    }
  };

  const renderQrCode = () => {
    if (url) {
      return (
        <QRCode
          data={url}
          style={{
            display: 'block',
          }}
        />
      );
    } else {
      return <Loader size="md" />;
    }
  };

  return (
    <Stack gap={'xs'}>
      <Text fw="bold">1. Download an authenticator app.</Text>
      <Text size="sm">
        We recommend{' '}
        <ExternalLink href="https://support.google.com/accounts/answer/1066447">
          Google Authenticator
        </ExternalLink>
        ,{' '}
        <ExternalLink href="https://support.1password.com/one-time-passwords/">
          1Password
        </ExternalLink>
        , or <ExternalLink href="https://authy.com/">Authy.</ExternalLink>
      </Text>
      <Text fw="bold">2. Scan this barcode using your authenticator app</Text>
      <Container
        size="xs"
        py="md"
        style={{ display: 'flex', justifyContent: 'center' }}>
        {renderQrCode()}
      </Container>
      <Text fw="bold">3. Enter the security code generated by your app</Text>
      <ErrorMessage error={error} />
      <PinInput
        style={{
          display: 'flex',
          justifyContent: 'center',
          alignItems: 'center',
        }}
        type="number"
        length={6}
        value={code}
        onChange={handleCodeChange}
        disabled={loading}
        size="lg"
      />
      <Divider my="sm" />
      <Group>
        <Button
          onClick={onSubmitCode}
          loading={loading}
          disabled={loading || code.length !== 6}>
          Verify
        </Button>
        <Button variant="default" onClick={() => onClose()}>
          Cancel
        </Button>
      </Group>
    </Stack>
  );
}
